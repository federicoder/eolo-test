
entity Professionista{
	idProfessionista Integer required,
    nome String,
    cognome String,
    tipologia String,
    codiceFiscale String required,
    pIva String,
    studioAssociato String,
    idLicenza Integer 
}

entity Licenza {
	idLicenza Integer required,
	tipologia String,
	descrizione String,
    dataScadenza LocalDate
    
}

entity Pratica {
	idPratica Integer required,
    idLic Integer required,
    tdp Integer required,
    idCollab Integer,
    idClient Integer required
}

entity Collaboratore{
	idCollaboratore Integer required,
    nome String,
    cognome String,
    tipologia String,
    idPratic Integer required,
    idInvito Integer
}

entity Cliente {
	idCliente Integer required,
    nome String,
    cognome String,
    idPraticaConnessa Integer required
}
entity Invito {
	utenteIscritto Boolean,
    idUtente Integer,
    idPratica Integer,
    idInvito Integer required
}

entity StorageCloud{
	idUtente Integer required,
    idLicenza Integer required,
    pianoBase String,
    dataCessione LocalDate 
}

enum AmpliamentoStorage{
	FIRSTKIT, SECONDKIT, THIRDKIT
}

relationship OneToOne {
	Licenza to Professionista,
	Invito to Collaboratore,
    Invito to Cliente,
    Licenza to StorageCloud,
    Professionista to StorageCloud
}
relationship OneToMany{
	Licenza to Pratica,
    Pratica to Invito,
	Professionista to Invito,
    Invito to Collaboratore
}
relationship ManyToMany{
    Collaboratore{idCollaboratore} to Invito{idUtente},
    Cliente{idCliente} to Invito{idPratica}

}

// Set pagination options
//paginate JobHistory, Employee with infinite-scroll
paginate Collaboratore, Professionista, Cliente with pagination

// Use Data Transfert Objects (DTO)
dto * with mapstruct

// Set service options to all except few
service all with serviceImpl except Cliente, Collaboratore

// Set an angular suffix
 angularSuffix * with frontend
